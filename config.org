
#+TITLE: Emacs configuration

* PATH
#+BEGIN_SRC emacs-lisp
;; to make python run anaconda-python and not the default one
(defun set-exec-path-from-shell-PATH ()
        (interactive)
        (let ((path-from-shell (replace-regexp-in-string "^.*\n.*shell\n" "" (shell-command-to-string "$SHELL --login -i -c 'echo $PATH'"))))
        (setenv "PATH" path-from-shell)
        (setq exec-path (split-string path-from-shell path-separator))))
(set-exec-path-from-shell-PATH)
#+END_SRC

* Packages

#+BEGIN_SRC emacs-lisp
(require 'package)

;;melpa to get autoconflict on list-package
(setq package-archives '(("ELPA" . "http://tromey.com/elpa/")
			 ("gnu" . "http://elpa.gnu.org/packages/")
;;			 ("marmalade" . "http://marmalade-repo.org/packages/")
			 ;; melpa has auto-complete mode
			 ("melpa" . "http://melpa.milkbox.net/packages/")))

;; Stable stable version from MELPA
(add-to-list 'package-archives
             '("melpa-stable" . "http://stable.melpa.org/packages/") t)
#+END_SRC

* Python

Indent 4 spaces.

#+BEGIN_SRC emacs-lisp
  (setq python-indent 4)
#+END_SRC
** Elpy setup
#+BEGIN_SRC emacs-lisp
(package-initialize)
(elpy-enable)
(setq elpy-rpc-backend "jedi")

(setenv "WORKON_HOME" "/Users/Krishna/anaconda/envs")
(pyvenv-mode 1)

(add-hook 'python-mode-hook
      (lambda ()
             (auto-complete-mode 1)
             (set (make-local-variable 'ac-sources)
                  (append ac-sources '(ac-source-yasnippet)))
             (set (make-local-variable 'ac-find-function) 'ac-python-find)
             (set (make-local-variable 'ac-candidate-function) 'ac-python-candidate)
             (set (make-local-variable 'ac-auto-start) nil)))
#+END_SRC
